<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_dead</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
if(obj_player.image_xscale = 1)
    image_xscale = -1
else
    image_xscale = 1
grav = 0.5;
hsp = 0;
vsp = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(vsp&lt;20)
    vsp += grav;

//Horizontal Collision
if(place_meeting(x+hsp,y,obj_wall)  || place_meeting(x+hsp,y,obj_dead_platform) || place_meeting(x+hsp,y,obj_crusher) || place_meeting(x+hsp,y,obj_step)|| place_meeting(x+hsp,y,obj_spikes)){
    
    yplus = 0;
    while((place_meeting(x+hsp,y-yplus,obj_wall) || place_meeting(x+hsp,y-yplus,obj_dead_platform) || place_meeting(x+hsp,y-yplus,obj_crusher) || place_meeting(x+hsp,y-yplus,obj_step)) &amp;&amp; yplus &lt;= abs(4*hsp))
        yplus +=1;
    if(place_meeting(x+hsp,y-yplus,obj_wall) || place_meeting(x+hsp,y-yplus,obj_dead_platform) || place_meeting(x+hsp,y-yplus,obj_crusher) || place_meeting(x+hsp,y-yplus,obj_step) || place_meeting(x+hsp,y-yplus,obj_spikes)){
        while(!place_meeting(x+sign(hsp),y,obj_wall)  &amp;&amp; !place_meeting(x+sign(hsp),y,obj_dead_platform) &amp;&amp; !place_meeting(x+sign(hsp),y,obj_crusher) &amp;&amp; !place_meeting(x+sign(hsp),y,obj_step) &amp;&amp; !place_meeting(x+sign(hsp),y,obj_spikes))
            x+=sign(hsp);
        hsp = 0;
    }
    else{
        y -= yplus;
    }

}
x += hsp;

//Vertical Collision
if(place_meeting(x,y+vsp,obj_wall) || place_meeting(x,y+vsp,obj_dead_platform) || place_meeting(x,y+vsp,obj_crusher) || place_meeting(x,y+vsp,obj_step)){
    while(!place_meeting(x,y+sign(vsp),obj_wall)  &amp;&amp; !place_meeting(x,y+sign(vsp),obj_dead_platform) &amp;&amp; !place_meeting(x,y+sign(vsp),obj_crusher) &amp;&amp; !place_meeting(x,y+sign(vsp),obj_step)){
        y+=sign(vsp);
    }
    vsp = 0;
}


 
//Collision with Crusher
if(!place_meeting(x,y,obj_wall) &amp;&amp; place_meeting(x,y,obj_crusher)){
    vsp = instance_nearest(x,y,obj_crusher).vspeed
}

y += vsp;

//while(place_meeting(x,y-1,obj_crusher) &amp;&amp; !place_meeting(x,y+1,obj_crusher) &amp;&amp; !place_meeting(x,y+1,obj_wall) &amp;&amp; !place_meeting(x,y-1,obj_wall))
//            y+=1;

if(instance_exists(obj_crusher)){
    if((obj_crusher.vspeed &lt; 0 &amp;&amp; place_meeting(x,y-1,obj_wall) &amp;&amp; place_meeting(x,y+1,instance_nearest(x,y,obj_crusher))) || (place_meeting(x,y-1,obj_crusher) &amp;&amp; place_meeting(x,y+1,obj_crusher)) || (obj_crusher.vspeed &gt; 0 &amp;&amp; place_meeting(x,y+1,obj_wall) &amp;&amp; place_meeting(x,y-1,instance_nearest(x,y,obj_crusher)))){
            repeat(100) instance_create(x,y,obj_blood);
            audio_play_sound(snd_spikes, 0, false);
            instance_destroy();
        }
    }
    
        
//Collision with belts
if(place_meeting(x,y+1,obj_belt) &amp;&amp; !place_meeting(x+3,y,obj_wall) &amp;&amp; !place_meeting(x+3,y,obj_dead_platform) &amp;&amp; !place_meeting(x+3,y,obj_crusher) &amp;&amp; !place_meeting(x+3,y,obj_player)){
    x+=2;
}

if(place_meeting(x,y+1,obj_belt_left) &amp;&amp; !place_meeting(x-3,y,obj_wall) &amp;&amp; !place_meeting(x-3,y,obj_dead_platform) &amp;&amp; !place_meeting(x-3,y,obj_crusher) &amp;&amp; !place_meeting(x-3,y,obj_player)){
    x-=2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fire">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_fire_hit</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_steak</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>14,22</point>
    <point>34,22</point>
    <point>34,54</point>
    <point>14,54</point>
  </PhysicsShapePoints>
</object>
