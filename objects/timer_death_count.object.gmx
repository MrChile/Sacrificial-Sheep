<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//count = true;

global.seconds=0;
global.minutes=0;
global.hours=0;
global.count_up = true;

global.death_count=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.go = false) exit;


if(global.count_up == true)
{
    global.seconds += 1/room_speed;
}

if(global.seconds &lt; 60) &amp;&amp; (global.seconds &gt; 59.9)
{
    global.seconds = 0;
    global.minutes += 1;
}

if(global.minutes == 60)
{
    global.minutes = 0;
    global.hours += 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw
draw_set_font(flesh);
draw_set_colour(c_white);

if(room != main_menu &amp;&amp; room != the_end &amp;&amp; global.go = true){
    if(global.minutes&lt;1){
        draw_set_halign(fa_left);
        if(global.seconds &lt;= obj_level_exit.gold_time)
            draw_set_colour(c_yellow);
        else if(global.seconds &lt;= obj_level_exit.silver_time)
            draw_set_colour(c_gray);
        else
            draw_set_colour(c_red);
    }
    if(global.seconds &lt; 10) &amp;&amp; (global.minutes &lt; 10)
        draw_text(6.5*room_width/10,8.8*room_height/10,"Time: " +string(global.minutes)+":0"+string(global.seconds)); 
    else if(global.seconds &gt;= 10) &amp;&amp; (global.minutes &gt;= 10){
    
        draw_text(6.5*room_width/10,8.8*room_height/10,"Time: " +string(global.minutes)+":"+string(global.seconds)); 
    }
    else if(global.seconds &lt; 10) &amp;&amp; (global.minutes &gt;= 10)
        draw_text(6.5*room_width/10,8.8*room_height/10,"Time: " +string(global.minutes)+":0"+string(global.seconds)); 
        
    else if(global.seconds &gt;= 10) &amp;&amp; (global.minutes &lt; 10)
        draw_text(6.5*room_width/10,8.8*room_height/10,"Time: " +string(global.minutes)+":"+string(global.seconds));
    if(global.death_count &lt;= obj_level_exit.gold_death)
        draw_set_colour(c_yellow);
    else if(global.death_count &lt;= obj_level_exit.silver_death)
        draw_set_colour(c_gray);
    else
        draw_set_colour(c_red);
    
         draw_text(6.5*room_width/10,8.2*room_height/10,"Deaths: "+string(global.death_count));
}
if(global.go = false &amp;&amp; room != main_menu &amp;&amp; room != the_end){
    draw_set_color(c_black);
    draw_set_alpha(0.8);
    draw_rectangle(0,0,room_width,room_height,0);
    draw_set_halign(fa_center);
    draw_set_font(flesh);
    draw_set_color(c_green);
    draw_set_alpha(1);
    draw_text(room_width/2,room_height/2,"Press Any Key to Start!");
    draw_set_halign(fa_left);
    draw_set_font(flesh);
    draw_set_color(c_yellow);
    draw_text(50,50,"Gold: ");
    draw_set_font(smallflesh);
    draw_text(50,100,"Deaths: &lt;= "+ string(obj_level_exit.gold_death) + "     Time: &lt;= " + string(obj_level_exit.gold_time));
    draw_set_font(flesh);
    draw_set_color(c_gray);
    draw_text(50,150,"Silver: ");
    draw_set_font(smallflesh);
    draw_text(50,200,"Deaths: &lt;= "+ string(obj_level_exit.silver_death) + "     Time: &lt;= " + string(obj_level_exit.silver_time));
    draw_set_font(flesh);
    draw_set_color(c_red);
    draw_text(50,250,"Bronze: ");
    draw_set_font(smallflesh);
    draw_text(50,300,"Deaths: &gt; "+ string(obj_level_exit.silver_death) + "     Time: &gt; " + string(obj_level_exit.silver_time));
    draw_set_color(c_black);
    draw_rectangle(0,0,50,50,1);
    draw_set_halign(fa_left);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
